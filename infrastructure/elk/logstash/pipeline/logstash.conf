input {
  rabbitmq {
    id => "rabbitmyq_id"
    # connect to rabbit
    user => "admin"
    password => "admin"
    host => "rabbitmq"
    port => 5672
    vhost => "/"
    # Create a new queue
    queue => "logstash_processing_queue"
    durable => "true"
    # Create a new exchange; point your application to publish here!
    exchange => "log_exchange"
    exchange_type => "direct"
    # Take a copy of all messages with the "app_version_queue" routing key from the new exchange
    key => "app_version_queue"
    # No ack will boost your perf
    ack => false
  }
}

filter {
  split {
    field => "movies"
    add_field => {
        "title" => "%{[movies][title]}"
        "year" => "%{[movies][year]}"
        "country" => "%{[movies][country]}"
        "rating" => "%{[movies][rating]}"
        "genre" => "%{[movies][genre]}"
    }
    remove_field => "movies"
  }
  mutate {
    convert => {
      "year" => "integer"
      "rating" => "float"
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
#    template => "/usr/share/logstash/templates/logstash.template.json"
#    template_name => "logstash"
#    template_overwrite => true
    index => "search-kinopoisk"
    codec => json
    user => "elastic"
    password => "bVla25U30blxHn7T0F36"
  }
  stdout {
    codec => json
  }
}